<apex:page standardController="Ensemblestorage__EnsembleFile__c" extensions="MFRUploadFileController" id="page" docType="html-5.0">    
    <style type="text/css">
        #chooseFiles {
            padding: 5px 10px;
        }
        #fileInput {
            display: none;
        }
        .bPageBlock .detailList th.labelCol {
            vertical-align: middle;
        }
        .s3-form textarea {
            width: 380px;
            height: 80px;
        }
        table#uploadProgress {
            background-color: white;
            border-bottom: 1px solid #EAEAEA;
            margin-top: 10px;
        }
        table#uploadProgress > tbody > tr > td {
            border-top: 1px solid #EAEAEA;
            vertical-align: middle;
        }
        table#uploadProgress > tbody > tr > td.progress-col {
            width: 50%;
        }
        .progress {
            height: 20px;
            overflow: hidden;
            background-color: #f5f5f5;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
            box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
            float: right;
            width: 400px;
        }
        .progress-bar {
            float: left;
            width: 0;
            height: 100%;
            font-size: 12px;
            line-height: 20px;
            color: #fff;
            text-align: center;
            background-color: #5bc0de;
            -webkit-box-shadow: inset 0 -1px 0 rgba(0,0,0,.15);
            box-shadow: inset 0 -1px 0 rgba(0,0,0,.15);
            -webkit-transition: width .6s ease;
            -o-transition: width .6s ease;
            transition: width .6s ease;
        }
        .block-overlay {
            z-index: 1000;
            border: none;
            margin: 0px;
            padding: 0px;
            width: 100%;
            height: 100%;
            top: 0px;
            left: 0px;
            opacity: 0.5;
            position: absolute;
            background-color: #000;
            display: none;
        }
        .block-message {
            z-index: 1011;
            position: absolute;
            padding: 0px;
            margin: 0px;
            width: 30%;
            top: 120px;
            left: 420px;
            text-align: center;
            color: #000;
            border: 2px solid #AAAAAA;
            background-color: #fff;
            display: none;
        }
    </style>
    <script type="text/javascript">
        var config = '{!JSENCODE(AWSConfig)}';
        var currentUserId = '{!$User.Id}';        
    </script>
    <apex:sectionHeader title="File Upload" subTitle="New S3 File" />
    <apex:form id="form" styleClass="s3-form"> 
        <apex:pageMessages id="result" />
        <apex:inputHidden value="{!AllUploaded}" id="allUploadedHidden" />
        <apex:inputHidden value="{!UploadResponse}" id="uploadResponseHidden" />
        <apex:actionFunction name="saveFile" action="{!saveFile}" reRender="result" />
        <apex:pageBlock title="File Upload" mode="edit" id="block">
            <apex:pageBlockButtons id="buttons">
                <input type="button" class="btn upload-btn" value="Save" />
                <apex:CommandButton value="Cancel" action="{!cancel}" immediate="true" id="cancel"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection columns="1" id="filesection" title="Files">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="File to Upload" />
                    <apex:outputPanel >
                        <input type="button" class="btn" value="Choose Files" id="chooseFiles" />
                        <input type="file" id="fileInput" name="file" multiple="multiple" />
                    </apex:outputPanel>                    
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <table width="100%" cellpadding="8" cellspacing="0" id="uploadProgress"></table>
                </apex:pageBlockSectionItem>                
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1" id="section" title="Information (applies to all files in this upload)">
              <apex:inputField value="{!Ensemblestorage__EnsembleFile__c.Ensemblestorage__Public__c}" styleClass="public-checkbox" />
              <apex:repeat value="{!$ObjectType.Ensemblestorage__EnsembleFile__c.FieldSets.Ensemblestorage__UploadNewFile}" var="f">
                    <apex:inputField value="{!Ensemblestorage__EnsembleFile__c[f]}" required="{!OR(f.Required, f.DBRequired)}" rendered="{!(LOWER(f.Type) == 'lookup' || LOWER(f.Type) == 'reference') && f.Label = RelateToObjectLabel}" />
                </apex:repeat>
                <apex:pageBlockSectionItem rendered="{!ShowLinkToObject}" >
                  <apex:outputLabel value="{!LinkToObjectLabel}" />
                  <apex:inputCheckbox value="{!LinkToParentObject}"/>
              </apex:pageBlockSectionItem>
              <apex:repeat value="{!$ObjectType.Ensemblestorage__EnsembleFile__c.FieldSets.Ensemblestorage__UploadNewFile}" var="f">
                    <apex:inputField value="{!Ensemblestorage__EnsembleFile__c[f]}" required="{!OR(f.Required, f.DBRequired)}" rendered="{!LOWER(f.Type) != 'lookup' && LOWER(f.Type) != 'reference'}" />
                </apex:repeat>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>

    <div class="block-overlay message-status"></div>
    <div class="block-message message-status"><h1>Uploading...</h1></div>

    <script type="text/javascript" src="{!URLFOR($Resource.S3FileLib_new, '/S3FileLib/components/jQuery/jquery-2.1.3.min.js')}" />
    <script type="text/javascript" src="{!URLFOR($Resource.S3FileLib_new, '/S3FileLib/components/aws/aws-sdk.min.js')}" />
    <script type="text/javascript" src="{!URLFOR($Resource.S3FileLib_new, '/S3FileLib/js/AWS.Config.js')}" />

    <script type="text/javascript">
        var totalSelected;
        var totalUploaded;
        var selectedFiles = new Array();
        (function($) {
            function createFileToSF(response) {            
                if(totalUploaded == totalSelected) {
                    $('[id$=allUploadedHidden]').val(true);
                    setTimeout(function(){ $('.message-status').hide(); }, 3000);
                }            
                var requestParams = response.request.params;
                var uploadResponse = '{"FileName":"' + requestParams.Body.name + '"';
                uploadResponse += ',"S3Key":"' + requestParams.Key + '"';
                uploadResponse += ',"FileSize":' + requestParams.ContentLength;
                uploadResponse += ',"S3Bucket":"' + requestParams.Bucket + '"}';
                $('[id$=uploadResponseHidden]').val(uploadResponse);               
                saveFile();
            }

            function listFiles() {
                $('#uploadProgress').empty();
                var tbody = $('<tbody></tbody>');
                for(var i = 0, len = selectedFiles.length; i < len; i++) {
                    var file = selectedFiles[i];     
                    $('<tr></tr>')
                        .append($('<td>' + file.name + '</td>'))
                        .append($('<td>' + convertByte(file.size) + '</td>'))
                        .append($('<td class="progress-col"><div class="progress"><div class="progress-bar" role="progressbar" aria-valuenow="2" aria-valuemin="0" aria-valuemax="100"></div></div></td>'))
                        .append($('<td style="width: 20px"><a href="#" class="remove-link">Remove</a></td>'))
                    .appendTo(tbody); 
                }                 
                $('#uploadProgress').append(tbody);
            }
            function convertByte(fileSize) {
                var scale = 1024;
                if(fileSize < scale * scale) {
                    return Math.round(fileSize / scale * 100) / 100 + ' KB';
                }
                if(fileSize < scale * scale * scale) {
                    return Math.round(fileSize / scale / scale * 100) / 100 + ' MB';
                }
                return Math.round(fileSize / scale / scale / scale * 100) / 100 + ' GB';
            }

            $('#chooseFiles').click(function(event) {
                document.getElementById('fileInput').click();                        
            });

            $('#fileInput').change(function(event) {  
                for(var i = 0, len = this.files.length; i < len; i++) {
                    selectedFiles.push(this.files[i]);
                } 
                // reset file input
                $(this).val('');                       
                listFiles();
            });

            // remove file from the selected file list
            $('#uploadProgress').on('click', '.remove-link', function(event) {
                event.preventDefault();
                var index = $('.remove-link').index(this); 
                // remove row from the table
                $(this).closest('tr').remove();                     
                // remove file from the selectedFiles list                        
                selectedFiles.splice(index, 1);
            });

            $('.upload-btn').click(function() {
                totalSelected = selectedFiles.length;
                if(totalSelected == 0) {
                    alert('Please choose at least one file to upload.');
                }
                else {
                    $('.message-status').show();
                    totalUploaded = 0;                
                    var bucket = new AWS.S3({ params: {Bucket: AWS.config.s3.params.Bucket} });
                    var progressBars = $('#uploadProgress .progress-bar');
                    var timeStamp = new Date().getTime();
                    var publicAccess = $('.public-checkbox').prop('checked');
                    for(var i = 0; i < totalSelected; i++) {
                        var file = selectedFiles[i];                        
                        var params = {
                            Key: 'sf2s3/' + currentUserId + '/' + timeStamp + '/' + file.name,
                            ContentType: file.type, 
                            ContentLength: file.size,
                            Body: file, 
                            ServerSideEncryption: 'AES256',
                            Metadata: {
                                sequence: String(i)
                            }
                        };  
                        if(publicAccess) {
                            params.ACL = 'public-read';
                        }
                        else {
                            params.ACL = 'private';
                        }
                        var request = bucket.putObject(params);
                        request.
                            on('success', function(response) {                            
                                totalUploaded++;
                                createFileToSF(response);
                                console.log(response);
                            }).
                            on('httpUploadProgress', function(progress, response) {                            
                                var uploaded = Math.round(progress.loaded / progress.total * 100);
                                if(uploaded > 0) {   
                                    uploaded = uploaded < 5 ? 5 : uploaded;
                                    var sequence = response.request.params.Metadata.sequence;
                                    var percent = uploaded + '%';                                    
                                    var progressBar = progressBars.eq(sequence);
                                    progressBar.attr('aria-valuenow', percent);
                                    progressBar.css('width', percent);
                                    progressBar.text(percent);
                                }
                            }).
                        send();
                    }
                }                
            });
        })(jQuery);
    </script>
</apex:page>